version: '2'
services:

  php:
    container_name: list_php
    build: ./docker/php/
    volumes:
      - ./laravel:/var/www
    restart: always
    working_dir: /var/www
    depends_on:
        - db

  nginx:
    image: nginx:alpine
    container_name: list_nginx
    restart: always
    ports:
      - 80:80
      # - 443:443
    volumes:
        - ./laravel:/var/www
        - ./docker/nginx/default.conf:/etc/nginx/conf.d/default.conf
    depends_on:
        - php

  db:
    container_name: list_db
    restart: always
    image: mysql:latest
    environment:
      MYSQL_ROOT_PASSWORD: root
      MYSQL_DATABASE: list_db
      MYSQL_USER: admin
      MYSQL_PASSWORD: password
    ports:
      - 3306:3306
    # 起動時のコマンド
    command: mysqld --character-set-server=utf8 --collation-server=utf8_unicode_ci
    # ディレクトリ同期。設定ファイルとMySQLのデータが保存される場所を同期している。
    # コンテナは基本的に起動時に変更されてもコンテナ自体が止まるとデータが消えてしまうため、
    # 保存しておきたいものはホストマシンと同期しておく必要がある。
    # volumes:
      # - ./docker/db/data/:/var/lib/mysql/data/:cached
      # - ./docker/db/my.cnf:/etc/mysql/conf.d/my.cnf

  # db:
  #   container_name: list_db
  #   restart: always
  #   image: postgres:latest
  #   environment: 
  #     POSTGRES_USER: admin
  #     POSTGRES_PASSWORD: password
  #   ports:
  #     - 3306:3306
  #   # 起動時のコマンド
  #   # command: mysqld --character-set-server=utf8 --collation-server=utf8_unicode_ci
  #   # ディレクトリ同期。設定ファイルとMySQLのデータが保存される場所を同期している。
  #   # コンテナは基本的に起動時に変更されてもコンテナ自体が止まるとデータが消えてしまうため、
  #   # 保存しておきたいものはホストマシンと同期しておく必要がある。
  #   volumes:
  #     - ./docker/db/data/:/var/lib/postgresql/data/:cached
  #     - 

  redis:
    image: redis:4-alpine
    container_name: list_redis
    restart: always
    volumes:
      - "./docker/redis/data/redis:/data"
    ports:
      - 6379:6379

  # mailhog:
  #   image: mailhog/mailhog
  #   ports:
  #     - ${MAILHOG_PORT}:8025

  phpmyadmin:
    image: phpmyadmin/phpmyadmin
    container_name: list_phpmyadmin
    restart: always
    depends_on:
      - list_db
    links:
      - mysql:db
    ports:
      - 3000:80
    volumes:
      - "./docker/phpmyadmin:/phpmyadmin"
    # command: /usr/bin/pgweb --bind=0.0.0.0 --listen=8081 --prefix=pgweb/